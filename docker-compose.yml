volumes:
  pg-data:
    driver: local

services:
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_LOCAL_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5

  postgres:
    image: pgvector/pgvector:pg17
    ports:
      - "${POSTGRES_LOCAL_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 60s
      start_interval: 1s

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${LANGGRAPH_LOCAL_PORT}:8000"
      - "8003:8003"
    volumes:
      - ./backend:/deps/ai_finance
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      REDIS_URI: redis://redis:6379
      POSTGRES_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      LANGSMITH_LANGGRAPH_DESKTOP: "true"
    env_file: .env
    healthcheck:
      test: ["CMD", "python", "/api/healthcheck.py"]
      interval: 60s
      start_interval: 1s
      start_period: 10s

  ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_LANGGRAPH_API_URL: http://127.0.0.1:${LANGGRAPH_LOCAL_PORT}
        NEXT_PUBLIC_ENVIRONMENT: local
    ports:
      - "${NEXT_LOCAL_PORT}:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - api
    env_file: ./frontend/.env
    command: pnpm dev
